{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jsbt_/OneDrive/Escritorio/Prueba Locatel/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { config } from 'src/app/config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class SesionService {\n  constructor(router) {\n    this.router = router;\n  }\n\n  getAppVersion() {\n    return \"1.0.256\";\n  }\n\n  getUsuario() {\n    if (this.session == null) {\n      this.session = JSON.parse(localStorage.getItem(config.session_id));\n      if (this.session == null) return null;\n    }\n\n    return this.session.usuario;\n  }\n\n  setUsuario(usuario) {\n    this.session.usuario = usuario;\n    localStorage.setItem(config.session_id, JSON.stringify(this.session));\n  }\n\n  getEmpleado() {\n    if (this.session == null) {\n      this.session = JSON.parse(localStorage.getItem(config.session_id));\n      if (this.session == null) return null;\n    }\n\n    return this.session.empleado;\n  }\n\n  setEmpleado(empleado) {\n    this.session.empleado = empleado;\n    localStorage.setItem(config.session_id, JSON.stringify(this.session));\n  }\n\n  getEmpresa() {\n    if (this.session == null) {\n      this.session = JSON.parse(localStorage.getItem(config.session_id));\n      if (this.session == null) return null;\n    }\n\n    return this.session.empresa;\n  }\n\n  setEmpresa(empresa) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.session.empresa = empresa;\n      yield localStorage.setItem(config.session_id, JSON.stringify(_this.session));\n    })();\n  }\n\n  getParamEmp() {\n    let empParam = this.getEmpresa();\n    return empParam == null ? '' : '' + empParam.id;\n  }\n\n  getBearerAuthToken() {\n    let token = this.getAuthToken();\n    return token == null ? '' : 'Bearer ' + token;\n  }\n\n  getAuthToken() {\n    return localStorage.getItem(config.token_id);\n  }\n\n  setLoggedIn(isLoggedIn) {\n    if (isLoggedIn) {\n      this.session = this.session == null ? {} : this.session;\n      this.session.isLoggedIn = true;\n      localStorage.setItem(config.session_id, JSON.stringify(this.session));\n    } else {\n      this.session = {};\n      localStorage.removeItem(config.session_id);\n      localStorage.removeItem('refresh');\n      localStorage.removeItem(config.token_id);\n    }\n  }\n\n  setAuthToken(token) {\n    localStorage.setItem(config.token_id, token);\n  }\n\n  setRefreshToken(refreshToken) {\n    localStorage.setItem('refresh', refreshToken);\n  }\n\n  setConfiguracionMap(configMap) {\n    this.session.configuracion = configMap;\n    localStorage.setItem(config.session_id, JSON.stringify(this.session));\n  }\n\n  setPermisosMap(permisosMapa) {\n    this.session.permisosMap = permisosMapa;\n    localStorage.setItem(config.session_id, JSON.stringify(this.session));\n  }\n\n  getPermisosMap() {\n    if (this.session == null) {\n      this.session = JSON.parse(localStorage.getItem(config.session_id));\n      if (this.session == null) return null;\n    }\n\n    return this.session.permisosMap;\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem('refresh');\n  }\n\n  getToken() {\n    if (this.session == null) {\n      this.session = JSON.parse(localStorage.getItem(config.session_id));\n      if (this.session == null) return null;\n    }\n\n    return this.session.token;\n  }\n\n  getConfigParam(codigo) {\n    let map = this.getConfiguracionMap();\n\n    if (map == null || this.getConfiguracionMap()[codigo] == null) {\n      switch (codigo) {\n        case 'APROB_INVEST_OBSERV':\n          return 'true';\n\n        case 'FORM_PART_INVST':\n          return 'true';\n\n        case 'FORM_COSTOS_INVST':\n          return 'true';\n\n        case 'NOMB_MOD_INP':\n          return 'Inspecciones';\n\n        case 'NOMB_MOD_AUC':\n          return 'Observaciones';\n\n        case 'NOMB_MOD_COP':\n          return 'COPASST';\n\n        case 'NOMB_MOD_SEC':\n          return 'Seguimiento y control';\n\n        case 'NOMB_MOD_IND':\n          return 'Indicadores';\n\n        case 'NUM_MAX_FOTO_INP':\n          return '3';\n      }\n\n      return null;\n    } else {\n      return this.getConfiguracionMap()[codigo].valor;\n    }\n  }\n\n  isLoggedIn() {\n    try {\n      if (this.session === null || this.session === undefined || localStorage.getItem(config.session_id) === null) {\n        this.session = JSON.parse(localStorage.getItem(config.session_id) ?? 'null');\n        if (this.session === null) return false;\n      }\n\n      return this.session.isLoggedIn;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  getConfiguracionMap() {\n    if (this.session == null) {\n      this.session = JSON.parse(localStorage.getItem(config.session_id));\n      if (this.session == null) return null;\n    }\n\n    return this.session.configuracion;\n  }\n\n}\n\nSesionService.ɵfac = function SesionService_Factory(t) {\n  return new (t || SesionService)(i0.ɵɵinject(i1.Router));\n};\n\nSesionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SesionService,\n  factory: SesionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["config","SesionService","constructor","router","getAppVersion","getUsuario","session","JSON","parse","localStorage","getItem","session_id","usuario","setUsuario","setItem","stringify","getEmpleado","empleado","setEmpleado","getEmpresa","empresa","setEmpresa","getParamEmp","empParam","id","getBearerAuthToken","token","getAuthToken","token_id","setLoggedIn","isLoggedIn","removeItem","setAuthToken","setRefreshToken","refreshToken","setConfiguracionMap","configMap","configuracion","setPermisosMap","permisosMapa","permisosMap","getPermisosMap","getRefreshToken","getToken","getConfigParam","codigo","map","getConfiguracionMap","valor","undefined","error","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\jsbt_\\OneDrive\\Escritorio\\Prueba Locatel\\front\\src\\app\\service\\session.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { config } from 'src/app/config';\r\nimport { Empleado } from '../../empresa/entities/empleado';\r\nimport { Empresa } from '../../empresa/entities/empresa';\r\nimport { Usuario } from '../../empresa/entities/usuario';\r\nimport { Session } from '../entities/session';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SesionService {\r\n  [x: string]: any;\r\n\r\n  private session!: Session;\r\n\r\n  constructor(\r\n    private router: Router,\r\n  ) { }\r\n\r\n  getAppVersion(): any {\r\n    return \"1.0.256\";\r\n  }\r\n\r\n  public getUsuario(): Usuario | null{\r\n    if (this.session == null) {\r\n        this.session = <Session>JSON.parse(localStorage.getItem(config.session_id)!);\r\n        if (this.session == null) return null;\r\n    }\r\n    return this.session.usuario;\r\n  }\r\n  \r\n  public setUsuario(usuario: Usuario) {\r\n    this.session.usuario = usuario;\r\n    localStorage.setItem(config.session_id, JSON.stringify(this.session));\r\n  }\r\n\r\n  public getEmpleado(): Empleado | null{\r\n    if (this.session == null) {\r\n        this.session = <Session>JSON.parse(localStorage.getItem(config.session_id)!);\r\n        if (this.session == null) return null;\r\n    }\r\n    return this.session.empleado;\r\n  }\r\n\r\n  public setEmpleado(empleado: Empleado) {\r\n      this.session.empleado = empleado;\r\n      localStorage.setItem(config.session_id, JSON.stringify(this.session));\r\n  }\r\n\r\n  public getEmpresa(): Empresa | null {\r\n    if (this.session == null) {\r\n        this.session = <Session>JSON.parse(localStorage.getItem(config.session_id)!);\r\n        if (this.session == null) return null;\r\n    }\r\n    return this.session.empresa;\r\n  }\r\n\r\n  public async setEmpresa(empresa: Empresa) {\r\n    this.session.empresa = empresa;\r\n    await localStorage.setItem(config.session_id, JSON.stringify(this.session));\r\n  }\r\n\r\n  public getParamEmp(): string {\r\n    let empParam = this.getEmpresa();\r\n    return empParam == null ? '' : '' + empParam.id;\r\n  }\r\n\r\n  public getBearerAuthToken(): string {\r\n    let token = this.getAuthToken();\r\n    return token == null ? '' : 'Bearer ' + token;\r\n  }\r\n\r\n  public getAuthToken(): string {\r\n    return localStorage.getItem(config.token_id)!;\r\n  }\r\n\r\n  public setLoggedIn(isLoggedIn: boolean) {\r\n        if (isLoggedIn) {\r\n            this.session = this.session == null ? {} as Session : this.session;\r\n            this.session.isLoggedIn = true;\r\n            localStorage.setItem(config.session_id, JSON.stringify(this.session));\r\n        } else {\r\n            this.session = {} as Session;\r\n            localStorage.removeItem(config.session_id);\r\n            localStorage.removeItem('refresh');\r\n            localStorage.removeItem(config.token_id);\r\n\r\n        }\r\n    }\r\n\r\n  public setAuthToken(token: string) {\r\n    localStorage.setItem(config.token_id, token);\r\n  }\r\n\r\n  public setRefreshToken(refreshToken: string) {\r\n    localStorage.setItem('refresh', refreshToken);\r\n  }\r\n\r\n  public setConfiguracionMap(configMap: any) {\r\n    this.session.configuracion = configMap;\r\n    localStorage.setItem(config.session_id, JSON.stringify(this.session));\r\n  }\r\n\r\n  public setPermisosMap(permisosMapa: any) {\r\n    this.session.permisosMap = permisosMapa;\r\n    localStorage.setItem(config.session_id, JSON.stringify(this.session));\r\n  }\r\n\r\n  public getPermisosMap(): any {\r\n    if (this.session == null) {\r\n        this.session = <Session>JSON.parse(localStorage.getItem(config.session_id)!);\r\n        if (this.session == null) return null;\r\n    }\r\n    return this.session.permisosMap;\r\n  }\r\n\r\n  public getRefreshToken(): string {\r\n    return localStorage.getItem('refresh')!;\r\n  }\r\n  public getToken(): string | null{\r\n    if (this.session == null) {\r\n        this.session = <Session>JSON.parse(localStorage.getItem(config.session_id)!);\r\n        if (this.session == null) return null;\r\n    }\r\n    return this.session.token;\r\n}\r\n\r\npublic getConfigParam(codigo: string) {\r\n  let map = this.getConfiguracionMap();\r\n  if (map == null || this.getConfiguracionMap()[codigo] == null) {\r\n      switch (codigo) {\r\n          case 'APROB_INVEST_OBSERV': return 'true';\r\n          case 'FORM_PART_INVST': return 'true';\r\n          case 'FORM_COSTOS_INVST': return 'true';\r\n          case 'NOMB_MOD_INP': return 'Inspecciones';\r\n          case 'NOMB_MOD_AUC': return 'Observaciones';\r\n          case 'NOMB_MOD_COP': return 'COPASST';\r\n          case 'NOMB_MOD_SEC': return 'Seguimiento y control';\r\n          case 'NOMB_MOD_IND': return 'Indicadores';\r\n          case 'NUM_MAX_FOTO_INP': return '3';\r\n      }\r\n      return null;\r\n  } else {\r\n      return this.getConfiguracionMap()[codigo].valor;\r\n  }\r\n\r\n}\r\n\r\npublic isLoggedIn(): boolean{\r\n  try {\r\n    if(this.session === null || this.session === undefined || localStorage.getItem(config.session_id) === null){\r\n      this.session = <Session>JSON.parse(localStorage.getItem(config.session_id) ?? 'null');\r\n      if(this.session === null) return false;\r\n    }\r\n    return this.session.isLoggedIn;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\npublic getConfiguracionMap(): any {\r\n  if (this.session == null) {\r\n      this.session = <Session>JSON.parse(localStorage.getItem(config.session_id)!);\r\n      if (this.session == null) return null;\r\n  }\r\n  return this.session.configuracion;\r\n}\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}