{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jsbt_/OneDrive/Escritorio/Prueba Locatel/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Cuenta } from 'src/app/entities/cuenta';\nimport { Usuario } from 'src/app/entities/usuarios';\nimport { UsuarioService } from 'src/app/service/usuario.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/usuario.service\";\nimport * as i2 from \"src/app/service/cuenta.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"primeng/button\";\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nexport class RegistrarLogoutComponent {\n  constructor(usuarioService, cuentaService, router, fb) {\n    this.usuarioService = usuarioService;\n    this.cuentaService = cuentaService;\n    this.router = router;\n    this.FlagRegOut = new EventEmitter();\n    this.saldo = 0;\n    this.formCrearUser = fb.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      password2: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.FlagRegOut.emit('login');\n  }\n\n  crearUser() {\n    var _this = this;\n\n    let usuario = new Usuario();\n    usuario.username = this.formCrearUser.value['username'].toString();\n    usuario.email = this.formCrearUser.value['email'].toString();\n    usuario.password = this.formCrearUser.value['password'].toString();\n    usuario.password2 = this.formCrearUser.value['password2'].toString();\n    this.usuarioService.create(usuario).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (response) {\n        console.log(response);\n        let sessionService = {\n          idUser: response.id,\n          username: usuario.username,\n          token: response.token\n        };\n        localStorage.setItem('sessionService', JSON.stringify(sessionService));\n\n        _this.formCrearUser.reset();\n\n        let cuenta = new Cuenta();\n        cuenta.usuario = response.id;\n        cuenta.numerocuenta = Math.floor(1000 + Math.random() * 8999);\n        cuenta.saldo = _this.saldo;\n        yield _this.cuentaService.create(cuenta);\n\n        _this.router.navigate(['/locatel/consultarLogin']);\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n}\n\nRegistrarLogoutComponent.ɵfac = function RegistrarLogoutComponent_Factory(t) {\n  return new (t || RegistrarLogoutComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.CuentaService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n};\n\nRegistrarLogoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrarLogoutComponent,\n  selectors: [[\"app-registrar-logout\"]],\n  outputs: {\n    FlagRegOut: \"FlagRegOut\"\n  },\n  features: [i0.ɵɵProvidersFeature([UsuarioService])],\n  decls: 35,\n  vars: 4,\n  consts: [[1, \"grid\", 2, \"padding-top\", \"95px\", \"height\", \"100%\"], [2, \"text-align\", \"end\", \"padding-right\", \"15%\"], [\"role\", \"form\", 3, \"formGroup\"], [1, \"col-12\"], [\"pInputText\", \"\", \"type\", \"text\", \"formControlName\", \"username\"], [\"pInputText\", \"\", \"type\", \"text\", \"formControlName\", \"email\"], [\"pInputText\", \"\", \"type\", \"number\", \"min\", \"0\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"pInputText\", \"\", \"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password2\"], [\"pButton\", \"\", \"type\", \"button\", 1, \"button-round\", \"button-gray\", \"text-color-white\", 3, \"click\"]],\n  template: function RegistrarLogoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 3)(4, \"span\");\n      i0.ɵɵtext(5, \"Nombre:\\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"span\");\n      i0.ɵɵtext(10, \"Correo: \\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"span\");\n      i0.ɵɵtext(15, \"Monto inicial: \\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrarLogoutComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.saldo = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"span\");\n      i0.ɵɵtext(20, \"Contrase\\u00F1a:\\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"span\");\n      i0.ɵɵtext(25, \"Confirmar contrase\\u00F1a:\\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(27, \"br\");\n      i0.ɵɵelementStart(28, \"div\")(29, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function RegistrarLogoutComponent_Template_button_click_29_listener() {\n        return ctx.crearUser();\n      });\n      i0.ɵɵtext(30, \"Registrar cuenta\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(31, \"br\");\n      i0.ɵɵelementStart(32, \"div\")(33, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function RegistrarLogoutComponent_Template_button_click_33_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(34, \"Iniciar sesi\\u00F3n\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.formCrearUser);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.saldo)(\"ngModelOptions\", i0.ɵɵpureFunction0(3, _c0));\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.MinValidator, i4.NgModel, i5.ButtonDirective, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3RyYXItbG9nb3V0LmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","Validators","Cuenta","Usuario","UsuarioService","RegistrarLogoutComponent","constructor","usuarioService","cuentaService","router","fb","formCrearUser","group","username","required","email","password","password2","ngOnInit","login","FlagRegOut","emit","crearUser","usuario","value","toString","create","then","response","console","log","sessionService","idUser","id","token","localStorage","setItem","JSON","stringify","reset","cuenta","numerocuenta","Math","floor","random","saldo","navigate","i0","selectors","outputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\jsbt_\\OneDrive\\Escritorio\\Prueba Locatel\\front\\src\\app\\pages\\registrar-logout\\registrar-logout.component.ts","C:\\Users\\jsbt_\\OneDrive\\Escritorio\\Prueba Locatel\\front\\src\\app\\pages\\registrar-logout\\registrar-logout.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Authentication } from 'src/app/entities/authentication';\nimport { Cuenta } from 'src/app/entities/cuenta';\nimport { Usuario } from 'src/app/entities/usuarios';\nimport { CuentaService } from 'src/app/service/cuenta.service';\nimport { UsuarioService } from 'src/app/service/usuario.service';\n\n@Component({\n  selector: 'app-registrar-logout',\n  templateUrl: './registrar-logout.component.html',\n  styleUrls: ['./registrar-logout.component.scss'],\n  providers:[UsuarioService]\n})\nexport class RegistrarLogoutComponent implements OnInit {\n  @Output()FlagRegOut = new EventEmitter<string>();\n\n  formCrearUser:FormGroup\n  saldo:number=0\n\n  constructor(\n    private usuarioService: UsuarioService,\n    private cuentaService:CuentaService,\n    private router: Router,\n    fb:FormBuilder\n  ) { \n    this.formCrearUser = fb.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      password2: ['', Validators.required]\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    this.FlagRegOut.emit('login');\n  }\n\n  crearUser(){\n    let usuario= new Usuario();  \n    usuario.username=this.formCrearUser.value['username'].toString()\n    usuario.email=this.formCrearUser.value['email'].toString()\n    usuario.password=this.formCrearUser.value['password'].toString()\n    usuario.password2=this.formCrearUser.value['password2'].toString()\n\n    this.usuarioService.create(usuario).then(async (response:any) => {\n      console.log(response)\n      let sessionService={idUser:response.id,username:usuario.username,token:response.token}\n      localStorage.setItem('sessionService', JSON.stringify(sessionService) )\n      this.formCrearUser.reset()\n\n\n      let cuenta=new Cuenta()\n      cuenta.usuario=response.id\n      cuenta.numerocuenta= Math.floor(1000 + Math.random() * 8999);\n      cuenta.saldo=this.saldo;\n      await this.cuentaService.create(cuenta)\n      this.router.navigate(['/locatel/consultarLogin']);\n    })\n  }\n\n}\n","<div style=\"padding-top: 95px; height: 100%;\" class=\"grid\">\n    <div style=\"text-align: end; padding-right: 15%;\">\n    <form [formGroup]=\"formCrearUser\" role=\"form\">\n\n        <div class=\"col-12\">\n            <span>Nombre:&nbsp;</span>\n\n            <input pInputText type=\"text\" formControlName=\"username\">\n        </div>\n\n        <br>\n        <div class=\"col-12\">\n            <span>Correo: &nbsp;</span>\n\n            <input pInputText type=\"text\" formControlName=\"email\">\n        </div>\n        <br>\n        <div class=\"col-12\">\n            <span>Monto inicial: &nbsp;</span>\n\n            <input pInputText type=\"number\" min=\"0\" [(ngModel)]=\"saldo\" [ngModelOptions]=\"{standalone:true}\">\n        </div>\n        <br>\n        <div class=\"col-12\">\n            <span>Contraseña:&nbsp;</span>\n\n            <input pInputText type=\"password\" formControlName=\"password\">\n        </div>\n        <br>\n        <div class=\"col-12\">\n            <span>Confirmar contraseña:&nbsp;</span>\n\n            <input type=\"password\" formControlName=\"password2\">\n        </div>\n    </form>\n\n    </div>\n        <br>\n        <div>\n            <button pButton class=\"button-round button-gray text-color-white\" \n                type=\"button\" (click)=\"crearUser()\">Registrar cuenta</button>\n        </div>\n        <br>\n        <div>\n            <button pButton class=\"button-round button-gray text-color-white\" \n                type=\"button\" (click)=\"login()\">Iniciar sesión</button>\n        </div>\n    \n    \n</div>"]},"metadata":{},"sourceType":"module"}